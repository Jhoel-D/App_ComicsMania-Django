"""
Django settings for ProyComicsmania project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
#new import
import os
# Import dj-database-url at the beginning of the file.
import dj_database_url


PAYPAL_CLIENT_ID = 'ASN1mNwEDNB287Si0Ock9BSi8KWcMOk0ileCfImWBlekUoZGbgx0dcRt6LtJqtjlJeS2vXufxHVkAYIT'
PAYPAL_CLIENT_SECRET = 'ENF4eES4A347ydyn5OTq3RS2JLBxY4auPzhVdf5MVbRHKCphOYbXBAUM1uHMz1Vw8bYPN4r4YiBEVAWl'
PAYPAL_MODE = 'sandbox'  # Cambiar a 'live' en producción

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

#
####AUTH_USER_MODEL = 'myapp1.CustomUser'
AUTH_USER_MODEL = 'myapp1.CustomUser'  
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-dl1m$*ub$!#t(ljae#6tr4%d_vw_%-=-f(*8)0+t-swf*xrg=('
SECRET_KEY = os.environ.get('SECRET_KEY', default='your secret key')#Deploy

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = 'RENDER' not in os.environ

ALLOWED_HOSTS = ['ws6st5js-8000.brs.devtunnels.ms', 'localhost', '127.0.0.1'] #Para que puedan acceder a admin desde tunel
#Deploy
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp1',
    'paypalcheckoutsdk',
    'rest_framework'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',#Para deploy
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ProyComicsmania.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'myapp1.views.cart_total',
            ],
        },
    },
]

WSGI_APPLICATION = 'ProyComicsmania.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
        # 'default': {
            # 'ENGINE': 'django.db.backends.mysql',
            # 'NAME': 'base_datos_comicsmania',
            # 'USER': 'root',
            # 'PASSWORD': '',
            # 'HOST': 'localhost',
            # 'PORT': '3308',
            'default': dj_database_url.config(
            # Replace this value with your local database's connection string.
                #default='postgresql://postgres:postgres@localhost:5432/mysite',
                #default='mysql://root:@localhost:3308/base_datos_comicsmania',
                default='mysql://root:@localhost:3308/deploy_bd_comicsmania',
                conn_max_age=600
                )
        }
# Asegúrate de que el motor de base de datos esté correctamente definido
#DATABASES['default']['ENGINE'] = 'django.db.backends.mysql'

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
#Deply
# This production code might break development mode, so we check whether we're in DEBUG mode
if not DEBUG:
    # Tell Django to copy static assets into a path called `staticfiles` (this is specific to Render)
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    # Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
    # and renames the files with unique names for each version to support long-term caching
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
#
STATICFILES_DIRS = [
    #BASE_DIR / "static",
    #os.path.join(BASE_DIR, 'static'),
    os.path.join('myapp1/static'),
]
LOGIN_URL = '/signin'
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

#For IMG
MEDIA_ROOT = os.path.join(BASE_DIR, "")
MEDIA_URl = '/images/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
